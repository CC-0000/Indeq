syntax = "proto3";

option go_package = "github.com/cc-0000/indeq/common/api";

package api;

import "api/query.proto";

message HttpHelloResponse {
  string message = 1;
}

message HttpQueryRequest {
  string query = 1;
  string conversation_id = 2; // optional --> this will be blank if the user is creating a new conversation
}

message HttpQueryResponse {
  string request_id = 1;
  string conversation_id = 2;
}

message HttpQueryDeleteConversationRequest {
  string conversation_id = 1;
}

message HttpQueryDeleteConversationResponse {
}

message HttpQueryGetConversationRequest {
  string conversation_id = 1;
}

message HttpConversation {
  string title = 1;
  string conversation_id = 2;
  repeated QueryMessage full_messages = 3;
}

message HttpQueryGetConversationResponse {
  HttpConversation conversation = 1;
}

message HttpQueryGetAllConversationsRequest {
}

message HttpQueryGetAllConversationsResponse {
  repeated QueryConversationHeader conversation_headers = 1;
}

message HttpRegisterRequest {
  string email = 1;
  string name = 2;
  string password = 3;
}

message HttpRegisterResponse {
  bool success = 1;
  string error = 2;
  string token = 3;
}

message HttpLoginRequest {
  string email = 1;
  string password = 2;
}

message HttpLoginResponse {
  string token = 1;
  string user_id = 2;
  string error = 3;
}

message HttpVerifyResponse {
  bool valid = 1;
}

message HttpCSRRequest {
  string email = 1;
  string password = 2;
  string csr_base64 = 3;
}

message HttpCSRResponse {
  string certificate_base64 = 1;
  string error = 2;
}

message HttpGetIntegrationsRequest {
}

message HttpGetIntegrationsResponse {
  repeated string providers = 1;
}

message HttpConnectIntegrationRequest {
  string Provider = 1;
  string AuthCode = 2;
  string State = 3;
}

message HttpConnectIntegrationResponse {
  bool success = 1;
  string message = 2;
  string error_details = 3;
}

message HttpDisconnectIntegrationRequest {
  string provider = 1;
}

message HttpDisconnectIntegrationResponse {
  bool success = 1;
  string message = 2;
}

message HttpGetOAuthURLRequest {
  string provider = 1;
}

message HttpGetOAuthURLResponse {
  string url = 1;
}


message HttpAddToWaitlistRequest {
  string email = 1;
}

message HttpAddToWaitlistResponse {
  bool success = 1;
  string message = 2;
}

message HttpGetDesktopStatsRequest {
}

message HttpGetDesktopStatsResponse {
  int32 crawled_files = 1;
  int32 total_files = 2;
  bool is_crawling = 3;
  bool is_online = 4;
}

message HttpVerifyOTPRequest {
  string code = 1;
  string type = 2;
  string token = 3;
}

message HttpVerifyOTPResponse {
  bool success = 1;
  string error = 2;
  string token = 3;
  string user_id = 4;
}

message HttpForgotPasswordRequest {
  string email = 1;
}

message HttpForgotPasswordResponse {
  bool success = 1;
  string error = 2;
}

message HttpResetPasswordRequest {
  string email = 1;
  string password = 2;
}

message HttpResetPasswordResponse {
  bool success = 1;
  string error = 2;
}