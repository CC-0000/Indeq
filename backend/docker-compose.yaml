services:
  # this docker ollama setup doesn't utilize the GPU
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    environment:
      - OLLAMA_NUM_PARALLEL=4 # Number of threads to utilize
    mem_limit: 16g
    networks:
      - indeq-net

  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    env_file:
      - ./common/config/.env
    ports:
      - 5672:5672 # AMQP protocol port
      - 15672:15672 # Management UI port
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - indeq-net

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    env_file:
      - ./common/config/.env
    networks:
      - indeq-net
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --list",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  init:
    build:
      context: .
      dockerfile: init/Dockerfile
    restart: "no"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - indeq-net

  authentication:
    image: authentication-service
    build:
      context: .
      dockerfile: authentication/Dockerfile
    depends_on:
      passwordDB:
        condition: service_healthy
      vector:
        condition: service_started
    networks:
      - indeq-net

  vector:
    image: vector-service
    build:
      context: .
      dockerfile: vector/Dockerfile
    depends_on:
      init:
        condition: service_completed_successfully
    networks:
      - indeq-net

  gateway:
    image: gateway-service
    build:
      context: .
      dockerfile: gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      query:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      authentication:
        condition: service_started
      init:
        condition: service_completed_successfully
    networks:
      - indeq-net

  query:
    image: query-service
    build:
      context: .
      dockerfile: query/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - indeq-net

  passwordDB:
    image: postgres:latest
    env_file:
      - ./common/config/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
    command:
      - -c
      - ssl=off
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - indeq-net

volumes:
  postgres_data:
  ollama_models:

networks:
  indeq-net:
    driver: bridge
